{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\KBCGame\\\\frontend\\\\src\\\\components\\\\Question.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Question = ({ onAnswer }) => {\n//     const [question, setQuestion] = useState(null);\n//     const [answered, setAnswered] = useState(false);  // Track if the question has been answered\n\n//     // Fetch a question from the backend\n//   const fetchQuestion = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/question');\n//       setQuestion(response.data);\n//       setAnswered(false); // Reset the answered state for the new question\n//     } catch (error) {\n//       console.error('Error fetching the question', error);\n//     }\n//   };\n\n//     useEffect(() => {\n//         // const fetchQuestion = async () => {\n//         //     const response = await axios.get('http://localhost:5000/api/question');\n//         //     setQuestion(response.data);\n//         // };\n//         fetchQuestion();\n//     }, []);\n\n//     const handleAnswer = (selectedAnswer) => {\n//         if (selectedAnswer === question.answer) {\n//             onAnswer(true);\n//         } else {\n//             onAnswer(false);\n//         }\n//         setAnswered(true); //  Mark the question as answered\n//     };\n\n//     const handleNext = () => {\n//         fetchQuestion(); // Fetch the next question when clicking \"Next\"\n//       };\n\n//     if (!question) return <div>Loading...</div>;\n\n//     return (\n//         <div>\n//             <h2>{question.question}</h2>\n//             {question.options.map((option, index) => (\n//                 <button key={index} onClick={() => handleAnswer(option)} disabled={answered}>\n//                     {option}\n//                 </button>\n//             ))}\n\n//             {answered && (\n//                 <div>\n//                   <button onClick={handleNext}>Next Question</button>\n//                 </div>\n//               )}\n//         </div>\n//     );\n// };\n\n// export default Question;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Question.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  onAnswer\n}) => {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [answered, setAnswered] = useState(false);\n  const fetchQuestion = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/question');\n      setQuestion(response.data);\n      setAnswered(false);\n      setSelectedAnswer(null);\n    } catch (error) {\n      console.error('Error fetching the question', error);\n    }\n  };\n  useEffect(() => {\n    fetchQuestion();\n  }, []);\n  const handleAnswer = selectedOption => {\n    setSelectedAnswer(selectedOption);\n    setAnswered(true);\n    onAnswer(selectedOption === question.answer);\n  };\n  const handleNext = () => {\n    fetchQuestion();\n  };\n  if (!question) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(option),\n        className: `option-button ${answered ? option === question.answer ? 'correct' : option === selectedAnswer ? 'wrong' : 'disabled' : ''}`,\n        disabled: answered,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), answered && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"EFdpAgq3/b/P7yLRPNrMJTLaDzY=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Question","onAnswer","_s","question","setQuestion","selectedAnswer","setSelectedAnswer","answered","setAnswered","fetchQuestion","response","get","data","error","console","handleAnswer","selectedOption","answer","handleNext","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","map","option","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/KBCGame/frontend/src/components/Question.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Question = ({ onAnswer }) => {\r\n//     const [question, setQuestion] = useState(null);\r\n//     const [answered, setAnswered] = useState(false);  // Track if the question has been answered\r\n\r\n//     // Fetch a question from the backend\r\n//   const fetchQuestion = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:5000/api/question');\r\n//       setQuestion(response.data);\r\n//       setAnswered(false); // Reset the answered state for the new question\r\n//     } catch (error) {\r\n//       console.error('Error fetching the question', error);\r\n//     }\r\n//   };\r\n\r\n//     useEffect(() => {\r\n//         // const fetchQuestion = async () => {\r\n//         //     const response = await axios.get('http://localhost:5000/api/question');\r\n//         //     setQuestion(response.data);\r\n//         // };\r\n//         fetchQuestion();\r\n//     }, []);\r\n\r\n//     const handleAnswer = (selectedAnswer) => {\r\n//         if (selectedAnswer === question.answer) {\r\n//             onAnswer(true);\r\n//         } else {\r\n//             onAnswer(false);\r\n//         }\r\n//         setAnswered(true); //  Mark the question as answered\r\n//     };\r\n\r\n    \r\n//     const handleNext = () => {\r\n//         fetchQuestion(); // Fetch the next question when clicking \"Next\"\r\n//       };\r\n\r\n//     if (!question) return <div>Loading...</div>;\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>{question.question}</h2>\r\n//             {question.options.map((option, index) => (\r\n//                 <button key={index} onClick={() => handleAnswer(option)} disabled={answered}>\r\n//                     {option}\r\n//                 </button>\r\n//             ))}\r\n            \r\n//             {answered && (\r\n//                 <div>\r\n//                   <button onClick={handleNext}>Next Question</button>\r\n//                 </div>\r\n//               )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Question;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Question.css';\r\n\r\nconst Question = ({ onAnswer }) => {\r\n  const [question, setQuestion] = useState(null);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [answered, setAnswered] = useState(false);\r\n\r\n  const fetchQuestion = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/question');\r\n      setQuestion(response.data);\r\n      setAnswered(false);\r\n      setSelectedAnswer(null);\r\n    } catch (error) {\r\n      console.error('Error fetching the question', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuestion();\r\n  }, []);\r\n\r\n  const handleAnswer = (selectedOption) => {\r\n    setSelectedAnswer(selectedOption);\r\n    setAnswered(true);\r\n    onAnswer(selectedOption === question.answer);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    fetchQuestion();\r\n  };\r\n\r\n  if (!question) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{question.question}</h2>\r\n      <div className=\"options-container\">\r\n        {question.options.map((option, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleAnswer(option)}\r\n            className={`option-button ${\r\n              answered\r\n                ? option === question.answer\r\n                  ? 'correct'\r\n                  : option === selectedAnswer\r\n                  ? 'wrong'\r\n                  : 'disabled'\r\n                : ''\r\n            }`}\r\n            disabled={answered}\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {answered && <button onClick={handleNext}>Next Question</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}