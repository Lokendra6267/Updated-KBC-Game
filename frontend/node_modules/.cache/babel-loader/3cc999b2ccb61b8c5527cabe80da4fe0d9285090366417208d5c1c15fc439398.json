{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\KBCGame\\\\frontend\\\\src\\\\components\\\\Question.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  onAnswer\n}) => {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [answered, setAnswered] = useState(false); // Track if the question has been answered\n\n  // Fetch a question from the backend\n  const fetchQuestion = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/question');\n      setQuestion(response.data);\n      setAnswered(false); // Reset the answered state for the new question\n    } catch (error) {\n      console.error('Error fetching the question', error);\n    }\n  };\n  useEffect(() => {\n    // const fetchQuestion = async () => {\n    //     const response = await axios.get('http://localhost:5000/api/question');\n    //     setQuestion(response.data);\n    // };\n    fetchQuestion();\n  }, []);\n  const handleAnswer = selectedAnswer => {\n    if (selectedAnswer === question.answer) {\n      onAnswer(true);\n    } else {\n      onAnswer(false);\n    }\n    setAnswered(true); // ad Mark the question as answered\n  };\n\n  // ad\n  const handleNext = () => {\n    fetchQuestion(); // Fetch the next question when clicking \"Next\"\n  };\n  if (!question) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), question.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAnswer(option),\n      disabled: answered,\n      children: option\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)), \"//ad\", answered && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Question, \"51HhDubKB6Hp8wcTX6MRm+3Pm4k=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Question","onAnswer","_s","question","setQuestion","answered","setAnswered","fetchQuestion","response","get","data","error","console","handleAnswer","selectedAnswer","answer","handleNext","children","fileName","_jsxFileName","lineNumber","columnNumber","options","map","option","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/KBCGame/frontend/src/components/Question.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Question = ({ onAnswer }) => {\r\n    const [question, setQuestion] = useState(null);\r\n    const [answered, setAnswered] = useState(false);  // Track if the question has been answered\r\n\r\n    // Fetch a question from the backend\r\n  const fetchQuestion = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/question');\r\n      setQuestion(response.data);\r\n      setAnswered(false); // Reset the answered state for the new question\r\n    } catch (error) {\r\n      console.error('Error fetching the question', error);\r\n    }\r\n  };\r\n\r\n    useEffect(() => {\r\n        // const fetchQuestion = async () => {\r\n        //     const response = await axios.get('http://localhost:5000/api/question');\r\n        //     setQuestion(response.data);\r\n        // };\r\n        fetchQuestion();\r\n    }, []);\r\n\r\n    const handleAnswer = (selectedAnswer) => {\r\n        if (selectedAnswer === question.answer) {\r\n            onAnswer(true);\r\n        } else {\r\n            onAnswer(false);\r\n        }\r\n        setAnswered(true); // ad Mark the question as answered\r\n    };\r\n\r\n    // ad\r\n    const handleNext = () => {\r\n        fetchQuestion(); // Fetch the next question when clicking \"Next\"\r\n      };\r\n\r\n    if (!question) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>{question.question}</h2>\r\n            {question.options.map((option, index) => (\r\n                <button key={index} onClick={() => handleAnswer(option)} disabled={answered}>\r\n                    {option}\r\n                </button>\r\n            ))}\r\n            //ad\r\n            {answered && (\r\n                <div>\r\n                  <button onClick={handleNext}>Next Question</button>\r\n                </div>\r\n              )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Question;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;;EAElD;EACF,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,oCAAoC,CAAC;MACtEL,WAAW,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC1BJ,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAECf,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IACA;IACAW,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAIC,cAAc,IAAK;IACrC,IAAIA,cAAc,KAAKX,QAAQ,CAACY,MAAM,EAAE;MACpCd,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,MAAM;MACHA,QAAQ,CAAC,KAAK,CAAC;IACnB;IACAK,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB,CAAC;;EAED;EACA,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACrBT,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC;EAEH,IAAI,CAACJ,QAAQ,EAAE,oBAAOJ,OAAA;IAAAkB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE3C,oBACItB,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAKd,QAAQ,CAACA;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC3BlB,QAAQ,CAACmB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAChC1B,OAAA;MAAoB2B,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAACW,MAAM,CAAE;MAACG,QAAQ,EAAEtB,QAAS;MAAAY,QAAA,EACvEO;IAAM,GADEC,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACX,CAAC,EAAC,MAEH,EAAChB,QAAQ,iBACLN,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAQ2B,OAAO,EAAEV,UAAW;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEd,CAAC;AAACnB,EAAA,CAvDIF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAyDd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}